{"version":3,"sources":["App.module.css","copmonents/fade/fade.module.css","copmonents/Form/Form.module.css","copmonents/ContactsList/ContactsList.module.css","copmonents/ContactsList/fadeContacts.module.css","copmonents/Filter/Filter.module.css","copmonents/Logo/fadeLogo.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","copmonents/Form/Form.js","copmonents/ContactsList/ContactsList.js","copmonents/Filter/Filter.js","copmonents/Logo/Logo.js","views/ContactsView.js"],"names":["module","exports","axios","defaults","baseURL","operations","addContact","name","number","dispatch","a","items","addContactRequest","post","data","addContactSuccess","addContactError","message","deleteContact","id","deleteContactRequest","delete","then","deleteContactSuccess","catch","error","deleteContactError","fetchContacts","fetchContactRequest","get","fetchContactSuccess","fetchContactError","getFilter","state","contacts","filter","getAllContacts","selectors","getVisibleContact","createSelector","allContacts","normalizedFilter","toLowerCase","contact","toLocaleLowerCase","includes","Form","useSelector","contactsSelectors","useState","nameContact","setNameContact","setNumber","doubleContact","setDoubleContact","setMessage","useDispatch","onSubmit","useCallback","contactsOperations","CSSTransition","in","classNames","fadeStyle","timeout","unmountOnExit","className","s","alert","mainForm","event","preventDefault","setTimeout","find","inputName","type","value","onChange","currentTarget","inputNumber","Phonebook","useEffect","onDeleteContact","TransitionGroup","component","map","fadeStyles","conctact","button","onClick","Filter","length","inputFind","e","changeFilter","target","Logo","appear","fadeLogo","title","ContactsViews","App"],"mappings":"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","file":"static/js/3.b646231b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__U8-hn\",\"field\":\"App_field__maW5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__G5Abq\",\"enterActive\":\"fade_enterActive__2sbYq\",\"exit\":\"fade_exit__38XoV\",\"exitActive\":\"fade_exitActive__3Bku5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"Form_mainForm__2F_Nu\",\"name\":\"Form_name__1DiGp\",\"number\":\"Form_number__V6Q0R\",\"inputName\":\"Form_inputName__22ePI\",\"inputNumber\":\"Form_inputNumber__1pVuJ\",\"addContact\":\"Form_addContact__1AsCn\",\"alert\":\"Form_alert__2xDdl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactsList_contact__1wYQu\",\"button\":\"ContactsList_button__3RtE9\",\"name\":\"ContactsList_name__1WNDR\",\"number\":\"ContactsList_number__TLHN1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeContacts_enter__2nUdL\",\"enterActive\":\"fadeContacts_enterActive__3N6ak\",\"exit\":\"fadeContacts_exit__30hCY\",\"exitActive\":\"fadeContacts_exitActive__2Fl6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find\":\"Filter_find__1ZOXN\",\"inputFind\":\"Filter_inputFind__3ooxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"fadeLogo_appear__3Chl7\",\"appearActive\":\"fadeLogo_appearActive__1uDnS\",\"title\":\"fadeLogo_title__3Hoks\"};","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"../contacts/contacts-actions\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactError(error)));\r\n};\r\n\r\nconst addContact = (name, number) => async (dispatch) => {\r\n  const items = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", items);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\n// const addContact = (data) => (dispatch) => {\r\n//   const contact = {\r\n//     name: data.name,\r\n//     number: data.number,\r\n//   };\r\n\r\n//   dispatch(addContactRequest());\r\n\r\n//   axios\r\n//     .post(\"/contacts\", contact)\r\n//     .then(({ data }) => dispatch(addContactSuccess(data)))\r\n//     .catch((error) => dispatch(addContactError(error)));\r\n// };\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n\r\nconst operations = {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n};\r\n\r\nexport default operations;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getVisibleContact = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return allContacts.filter((contact) =>\r\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\nconst selectors = {\r\n  getVisibleContact,\r\n  getFilter,\r\n  getAllContacts,\r\n};\r\n\r\nexport default selectors;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport s from \"./Form.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport fadeStyle from \"../fade/fade.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { contactsSelectors, contactsOperations } from \"../../redux/contacts\";\r\n\r\nexport default function Form() {\r\n  const contacts = useSelector(contactsSelectors.getAllContacts);\r\n  const [nameContact, setNameContact] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [doubleContact, setDoubleContact] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const changeName = (event) => {\r\n    setNameContact(event.currentTarget.value);\r\n  };\r\n\r\n  const changeNumber = (event) => {\r\n    setNumber(event.currentTarget.value);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const onSubmit = useCallback(\r\n    (nameContact, number) =>\r\n      dispatch(contactsOperations.addContact(nameContact, number)),\r\n    [dispatch]\r\n  );\r\n\r\n  const addContact = (event) => {\r\n    event.preventDefault();\r\n    if (nameContact === \"\" && number === \"\") {\r\n      setMessage(\"Введите имя и номер контакта\");\r\n      setDoubleContact(true);\r\n      setTimeout(() => {\r\n        setMessage(\"\");\r\n        setDoubleContact(false);\r\n      }, 3000);\r\n      return;\r\n    }\r\n    if (\r\n      contacts.find(\r\n        ({ name }) =>\r\n          name.toLocaleLowerCase() === nameContact.toLocaleLowerCase()\r\n      )\r\n    ) {\r\n      setMessage(`Контакт с именем ${nameContact} уже существует`);\r\n      setDoubleContact(true);\r\n      setTimeout(\r\n        () => {\r\n          setMessage(\"\");\r\n          setDoubleContact(false);\r\n          setNameContact(\"\");\r\n          setNumber(\"\");\r\n        },\r\n\r\n        3000\r\n      );\r\n      return;\r\n    }\r\n    onSubmit(nameContact, number);\r\n    setNameContact(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CSSTransition\r\n        in={doubleContact}\r\n        classNames={fadeStyle}\r\n        timeout={500}\r\n        unmountOnExit\r\n      >\r\n        <p className={s.alert}>{message}</p>\r\n      </CSSTransition>\r\n\r\n      <form className={s.mainForm} onSubmit={addContact}>\r\n        <label className={s.name}>\r\n          Name{\" \"}\r\n          <input\r\n            className={s.inputName}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={nameContact}\r\n            onChange={changeName}\r\n          />\r\n        </label>\r\n        <label className={s.number}>\r\n          Number{\" \"}\r\n          <input\r\n            className={s.inputNumber}\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={number}\r\n            onChange={changeNumber}\r\n          />\r\n        </label>\r\n        <br></br>\r\n        <button className={s.addContact} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// class Form extends React.Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     number: \"\",\r\n//     doubleContact: false,\r\n//     message: \"\",\r\n//   };\r\n\r\n//   changeInput = (event) => {\r\n//     const { name, value } = event.currentTarget;\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   addContact = (event) => {\r\n//     event.preventDefault();\r\n//     if (this.state.name === \"\" && this.state.number === \"\") {\r\n//       this.setState({\r\n//         message: \"Введите имя и номер контакта\",\r\n//         doubleContact: true,\r\n//       });\r\n//       setTimeout(\r\n//         () => this.setState({ message: \"\", doubleContact: false }),\r\n//         3000\r\n//       );\r\n//       return;\r\n//     }\r\n//     if (\r\n//       this.props.contacts.find(\r\n//         ({ name }) =>\r\n//           name.toLocaleLowerCase() === this.state.name.toLocaleLowerCase()\r\n//       )\r\n//     ) {\r\n//       this.setState({\r\n//         message: `Контакт с именем ${this.state.name} уже существует`,\r\n//         doubleContact: true,\r\n//       });\r\n//       setTimeout(\r\n//         () => {\r\n//           this.setState({ message: \"\", doubleContact: false });\r\n//           this.reset();\r\n//         },\r\n\r\n//         3000\r\n//       );\r\n//       return;\r\n//     }\r\n//     this.props.onSubmit(this.state);\r\n//     this.reset();\r\n//   };\r\n\r\n//   reset = () => {\r\n//     this.setState({ name: \"\", number: \"\" });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, number, doubleContact, message } = this.state;\r\n//     return (\r\n//       <div>\r\n//         <CSSTransition\r\n//           in={doubleContact}\r\n//           classNames={fadeStyle}\r\n//           timeout={500}\r\n//           unmountOnExit\r\n//         >\r\n//           <p className={s.alert}>{message}</p>\r\n//         </CSSTransition>\r\n\r\n//         <form className={s.mainForm} onSubmit={this.addContact}>\r\n//           <label className={s.name}>\r\n//             Name{\" \"}\r\n//             <input\r\n//               className={s.inputName}\r\n//               name=\"name\"\r\n//               type=\"text\"\r\n//               value={name}\r\n//               onChange={this.changeInput}\r\n//             />\r\n//           </label>\r\n//           <label className={s.number}>\r\n//             Number{\" \"}\r\n//             <input\r\n//               className={s.inputNumber}\r\n//               name=\"number\"\r\n//               type=\"text\"\r\n//               value={number}\r\n//               onChange={this.changeInput}\r\n//             />\r\n//           </label>\r\n//           <br></br>\r\n//           <button className={s.addContact} type=\"submit\">\r\n//             Add Contact\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// const mapStateToProps = (state) => ({\r\n//   contacts: contactsSelectors.getAllContacts(state),\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onSubmit: (data) => dispatch(contactsOperations.addContact(data)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport s from \"./ContactsList.module.css\";\r\nimport fadeStyles from \"./fadeContacts.module.css\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\n\r\nexport default function Phonebook() {\r\n  const contacts = useSelector(contactsSelectors.getVisibleContact);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const onDeleteContact = useCallback(\r\n    (id) => {\r\n      dispatch(contactsOperations.deleteContact(id));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <CSSTransition classNames={fadeStyles} key={id} timeout={500}>\r\n          <li className={s.conctact}>\r\n            <p className={s.name}>{name}</p>\r\n            <p className={s.number}>{number}</p>\r\n            <button className={s.button} onClick={() => onDeleteContact(id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n\r\n// class Phonebook extends React.Component {\r\n//   componentDidMount() {\r\n//     this.props.fetchContacts();\r\n//   }\r\n\r\n//   render() {\r\n//     const { contacts, onDeleteContact } = this.props;\r\n\r\n//     return (\r\n//       <TransitionGroup component=\"ul\">\r\n//         {contacts.map(({ id, name, number }) => (\r\n//           <CSSTransition classNames={fadeStyles} key={id} timeout={500}>\r\n//             <li className={s.conctact}>\r\n//               <p className={s.name}>{name}</p>\r\n//               <p className={s.number}>{number}</p>\r\n//               <button className={s.button} onClick={() => onDeleteContact(id)}>\r\n//                 Delete\r\n//               </button>\r\n//             </li>\r\n//           </CSSTransition>\r\n//         ))}\r\n//       </TransitionGroup>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   contacts: contactsSelectors.getVisibleContact(state),\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onDeleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\r\n//   fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport fadeStyle from \"../fade/fade.module.css\";\r\nimport { contactsSelectors, changeFilter } from \"../../redux/contacts\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n  const contacts = useSelector(contactsSelectors.getAllContacts);\r\n\r\n  const onChange = (e) => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        in={contacts.length > 1}\r\n        classNames={fadeStyle}\r\n        timeout={500}\r\n        unmountOnExit\r\n      >\r\n        <label className={s.find}>\r\n          Find number\r\n          <input\r\n            className={s.inputFind}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n          ></input>\r\n        </label>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n}\r\n\r\n// const Filter = ({ value, onChange, contacts }) => {\r\n//   return (\r\n//     <>\r\n//       <CSSTransition\r\n//         in={contacts.length > 1}\r\n//         classNames={fadeStyle}\r\n//         timeout={500}\r\n//         unmountOnExit\r\n//       >\r\n//         <label className={s.find}>\r\n//           Find number\r\n//           <input\r\n//             className={s.inputFind}\r\n//             type=\"text\"\r\n//             value={value}\r\n//             onChange={onChange}\r\n//           ></input>\r\n//         </label>\r\n//       </CSSTransition>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   value: contactsSelectors.getFilter(state),\r\n//   contacts: contactsSelectors.getAllContacts(state),\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onChange: (e) => dispatch(changeFilter(e.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport fadeLogo from \"./fadeLogo.module.css\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      classNames={fadeLogo}\r\n      timeout={500}\r\n      unmountOnExit\r\n    >\r\n      <h2 className={fadeLogo.title}>Phonebook</h2>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport s from \"../App.module.css\";\r\nimport Form from \"../copmonents/Form/Form\";\r\nimport Phonebook from \"../copmonents/ContactsList/ContactsList\";\r\nimport Filter from \"../copmonents/Filter/Filter\";\r\nimport Logo from \"../copmonents/Logo/Logo\";\r\n\r\nconst ContactsViews = () => {\r\n  return (\r\n    <div className={s.App}>\r\n      <Logo />\r\n      <Form />\r\n      <h2 className={s.title}>Contacts</h2>\r\n      <Filter />\r\n      <Phonebook />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsViews;\r\n"],"sourceRoot":""}