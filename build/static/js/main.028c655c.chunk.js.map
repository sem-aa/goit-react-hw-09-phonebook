{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-reducer.js","copmonents/Auth/Auth.module.css","copmonents/UserMenu/UserMenu.module.css","copmonents/AppBar/AppBar.module.css","redux/contacts/contacts-actions.js","copmonents/Auth/Auth.js","icon/icon-login.png","copmonents/UserMenu/UserMenu.js","copmonents/AppBar/AppBar.js","copmonents/PrivateRoute/PrivateRoute.js","copmonents/PublicRoute/PublicRoute.js","App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["actions","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","operations","register","name","email","password","dispatch","a","credentials","authActions","post","response","data","message","logOut","logIn","getCurrentUser","getState","persistedToken","auth","get","selectors","getIsAuthenticated","state","isAuthenticated","getUserName","user","getToken","initionalState","createReducer","_","payload","error","combineReducers","module","exports","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","Auth","className","s","App","to","exat","link","Button","variant","UserMenu","useDispatch","useSelector","authSelectors","onLogout","useCallback","authOperations","icon","src","defaultAvatar","alt","width","text","type","onClick","AppBar","isLoggedIn","PrivateRoute","redirectTo","children","routeProps","PublicRoute","restricted","RegisterView","lazy","LoginView","ContactsView","useEffect","Container","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","items","filter","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","allStore","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAiCeA,EAfC,CACdC,gBAjBsBC,YAAa,wBAkBnCC,gBAjBsBD,YAAa,wBAkBnCE,cAjBoBF,YAAa,sBAkBjCG,aAhBmBH,YAAa,qBAiBhCI,aAhBmBJ,YAAa,qBAiBhCK,WAhBiBL,YAAa,mBAiB9BM,cAfoBN,YAAa,sBAgBjCO,cAfoBP,YAAa,sBAgBjCQ,YAfkBR,YAAa,oBAgB/BS,sBAd4BT,YAAa,8BAezCU,sBAd4BV,YAAa,8BAezCW,oBAd0BX,YAAa,6BCbzCY,IAAMC,SAASC,QAAU,2CAEzB,I,QAAMC,EAAQ,SACRA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAKVH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAgEnCC,EANI,CACjBC,SAvDe,SAACC,EAAMC,EAAOC,GAAd,8CAA2B,WAAOC,GAAP,iBAAAC,EAAA,6DACpCC,EAAc,CAAEL,OAAMC,QAAOC,YACnCC,EAASG,EAAY5B,mBAFqB,kBAIjBa,IAAMgB,KAAK,gBAAiBF,GAJX,OAIlCG,EAJkC,OAMxCd,EAAUc,EAASC,KAAKf,OACxBS,EAASG,EAAY1B,gBAAgB4B,EAASC,OAPN,kDASxCN,EAASG,EAAYzB,cAAc,KAAM6B,UATD,0DAA3B,uDAwDfC,OA/Ba,yDAAM,WAAOR,GAAP,SAAAC,EAAA,6DACnBD,EAASG,EAAYrB,iBADF,kBAGXM,IAAMgB,KAAK,iBAHA,OAIjBb,IACAS,EAASG,EAAYpB,iBALJ,gDAOjBiB,EAASG,EAAYnB,YAAY,KAAMuB,UAPtB,yDAAN,uDAgCbE,MA5CY,SAACX,EAAOC,GAAR,8CAAqB,WAAOC,GAAP,iBAAAC,EAAA,6DAC3BC,EAAc,CAAEJ,QAAOC,YAC7BC,EAASG,EAAYxB,gBAFY,kBAIRS,IAAMgB,KAAK,eAAgBF,GAJnB,OAIzBG,EAJyB,OAK/Bd,EAAUc,EAASC,KAAKf,OACxBS,EAASG,EAAYvB,aAAayB,EAASC,OANZ,kDAQ/BN,EAASG,EAAYtB,WAAW,KAAM0B,UARP,0DAArB,uDA6CZG,eAtBqB,yDAAM,WAAOV,EAAUW,GAAjB,mBAAAV,EAAA,2DAGvBU,IADaC,EAFU,EAEzBC,KAAQtB,MAFiB,wDAQ3BA,EAAUqB,GACVZ,EAASG,EAAYlB,yBATM,kBAWFG,IAAM0B,IAAI,kBAXR,OAWnBT,EAXmB,OAYzBL,EAASG,EAAYjB,sBAAsBmB,EAASC,OAZ3B,kDAczBN,EAASG,EAAYhB,oBAAoB,KAAMoB,UAdtB,0DAAN,0DCvCRQ,EALG,CAChBC,mBAPyB,SAACC,GAAD,OAAWA,EAAMJ,KAAKK,iBAQ/CC,YANkB,SAACF,GAAD,OAAWA,EAAMJ,KAAKO,KAAKvB,MAO7CwB,SALe,SAACJ,GAAD,OAAWA,EAAMJ,KAAKtB,Q,cCAjC+B,EAAiB,CAAEzB,KAAM,KAAMC,MAAO,MAEtCsB,EAAOG,YAAcD,GAAD,mBACvBnB,EAAY1B,iBAAkB,SAAC+C,EAAD,YAAMC,QAAsBL,QADnC,cAEvBjB,EAAYvB,cAAe,SAAC4C,EAAD,YAAMC,QAAsBL,QAFhC,cAGvBjB,EAAYpB,eAAgB,kBAAMuC,KAHX,cAIvBnB,EAAYjB,uBAAwB,SAACsC,EAAD,YAAMC,WAJnB,IAOpBlC,EAAQgC,YAAc,MAAD,mBACxBpB,EAAY1B,iBAAkB,SAAC+C,EAAD,YAAMC,QAAsBlC,SADlC,cAExBY,EAAYvB,cAAe,SAAC4C,EAAD,YAAMC,QAAsBlC,SAF/B,cAGxBY,EAAYpB,eAAgB,kBAAM,QAHV,IAMrB2C,EAAQH,YAAc,MAAD,mBACxBpB,EAAYzB,eAAgB,SAAC8C,EAAD,YAAMC,WADV,cAExBtB,EAAYtB,YAAa,SAAC2C,EAAD,YAAMC,WAFP,cAGxBtB,EAAYnB,aAAc,SAACwC,EAAD,YAAMC,WAHR,cAIxBtB,EAAYhB,qBAAsB,SAACqC,EAAD,YAAMC,WAJhB,IAOrBP,EAAkBK,aAAc,GAAD,mBAClCpB,EAAY1B,iBAAkB,kBAAM,KADF,cAElC0B,EAAYvB,cAAe,kBAAM,KAFC,cAGlCuB,EAAYjB,uBAAwB,kBAAM,KAHR,cAIlCiB,EAAYzB,eAAgB,kBAAM,KAJA,cAKlCyB,EAAYtB,YAAa,kBAAM,KALG,cAMlCsB,EAAYhB,qBAAsB,kBAAM,KANN,cAOlCgB,EAAYpB,eAAgB,kBAAM,KAPA,IAUtB4C,cAAgB,CAC7BP,OACAF,kBACA3B,QACAmC,W,mBCvCFE,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,yB,mBCArFD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,oDCDzD,+VAEaC,EAAsBtD,YAAa,gCACnCuD,EAAsBvD,YAAa,gCACnCwD,EAAoBxD,YAAa,8BAEjCyD,EAAoBzD,YAAa,8BACjC0D,EAAoB1D,YAAa,8BACjC2D,EAAkB3D,YAAa,4BAE/B4D,EAAuB5D,YAClC,iCAEW6D,EAAuB7D,YAClC,iCAEW8D,EAAqB9D,YAAa,+BAElC+D,EAAe/D,YAAa,oB,mJCI1BgE,EAjBF,kBACX,sBAAKC,UAAWC,IAAEC,IAAlB,UACE,cAAC,IAAD,CACEC,GAAG,YACHC,MAAI,EACJJ,UAAWC,IAAEI,KAHf,SAIE,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAhB,wBAEF,cAAC,IAAD,CACEJ,GAAG,SACHC,MAAI,EACJJ,UAAWC,IAAEI,KAHf,SAIE,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAhB,yB,QCjBS,MAA0B,uC,iBCQ1B,SAASC,IACtB,IAAMjD,EAAWkD,cACXrD,EAAOsD,YAAYC,IAAcjC,aACjCkC,EAAWC,uBAAY,kBAAMtD,EAASuD,IAAe/C,YAAW,CACpER,IAGF,OACE,sBAAKyC,UAAWC,IAAEtB,KAAlB,UACE,qBAAKqB,UAAWC,IAAEc,KAAMC,IAAKC,EAAeC,IAAI,GAAGC,MAAM,OACzD,uBAAMnB,UAAWC,IAAEmB,KAAnB,uBAAoChE,EAApC,OACA,cAACkD,EAAA,EAAD,CAAQC,QAAQ,oBAAoBc,KAAK,SAASC,QAASV,EAA3D,wB,qBCVS,SAASW,IACtB,IAAMC,EAAad,YAAYC,IAAcpC,oBAC7C,OACE,sBAAKyB,UAAWC,IAAEsB,OAAlB,UACGC,GACC,cAAC,IAAD,CAASxB,UAAWC,IAAEI,KACpBF,GAAG,YACHC,MAAI,EAFN,SAGE,cAACE,EAAA,EAAD,CAAQC,QAAQ,oBAAhB,yBAGHiB,EAAa,cAAChB,EAAD,IAAe,cAAC,EAAD,O,oBCfpB,SAASiB,EAAT,GAKZ,EAJDhD,gBAIE,IAHFiD,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,EACF,2DACKJ,EAAad,YAAYC,IAAc/B,UAC7C,OACE,cAAC,IAAD,2BAAWgD,GAAX,aACGJ,EAAaG,EAAW,cAAC,IAAD,CAAUxB,GAAIuB,OCT9B,SAASG,EAAT,GAKZ,EAJDpD,gBAIE,IAHFiD,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,EACF,2DACKJ,EAAad,YAAYC,IAAcpC,oBAC7C,OACE,cAAC,IAAD,2BAAWqD,GAAX,aACGJ,GAAcI,EAAWE,WACxB,cAAC,IAAD,CAAU3B,GAAIuB,IAEdC,K,kBCPFI,EAAeC,gBAAK,kBAAM,uDAC1BC,EAAYD,gBAAK,kBAAM,uDACvBE,EAAeF,gBAAK,kBAAM,8DAEjB,SAAS9B,IACtB,IAAM3C,EAAWkD,cAMjB,OAJA0B,qBAAU,WACR5E,EAASuD,IAAe7C,oBACvB,CAACV,IAGF,eAAC6E,EAAA,EAAD,WACE,cAACb,EAAD,IACA,cAAC,WAAD,CAAUc,SAAU,0FAApB,SACE,eAAC,IAAD,WACE,cAACR,EAAD,CAAaS,KAAK,YAAYR,YAAU,EAACJ,WAAW,YAApD,SACE,cAACK,EAAD,MAEF,cAACF,EAAD,CAAaS,KAAK,SAASR,YAAU,EAACJ,WAAW,YAAjD,SACE,cAACO,EAAD,MAEF,cAACR,EAAD,CAAca,KAAK,YAAYZ,WAAW,SAA1C,SACE,cAACQ,EAAD,cCjCZ,I,IAYeK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qDCeRQ,EAAQlE,YAPS,IAOI,mBACxBQ,KAAsB,SAACP,EAAD,YAAMC,WADJ,cAExBS,KAAoB,SAACjB,EAAD,OAAUQ,EAAV,EAAUA,QAAV,4BAA4BR,GAA5B,CAAmCQ,OAF/B,cAGxBY,KAAuB,SAACpB,EAAD,OAAUQ,EAAV,EAAUA,QAAV,OACtBR,EAAMyE,QAAO,qBAAGC,KAAgBlE,QAJT,IAOrBiE,EAASnE,YAAc,GAAD,eACzBgB,KAAe,SAACf,EAAD,YAAMC,YAGlBmE,EAAUrE,aAAc,GAAD,mBAC1BU,KAAoB,kBAAM,KADA,cAE1BC,KAAoB,kBAAM,KAFA,cAG1BC,KAAkB,kBAAM,KAHE,cAI1BC,KAAuB,kBAAM,KAJH,cAK1BC,KAAuB,kBAAM,KALH,cAM1BC,KAAqB,kBAAM,KAND,cAO1BR,KAAsB,kBAAM,KAPF,cAQ1BC,KAAsB,kBAAM,KARF,cAS1BC,KAAoB,kBAAM,KATA,IAYdL,cAAgB,CAC7B8D,QACAC,SACAE,Y,yBChCIC,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAIRC,EAAQC,YAAe,CAC3BC,QAAS,CACPjG,KAAMkG,YAAeP,EAAmBQ,KACxCC,SAAUC,GAEZrB,aACAsB,UAAUC,IAOGC,EAFE,CAAET,QAAOU,UAFRC,YAAaX,IC/B/BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUd,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAahB,QAAS,KAAM0B,UAAWV,EAAMU,UAA7C,SACE,cAAC,IAAD,UACE,cAAC3E,EAAD,YAKRgF,SAASC,eAAe,SAM1B5C,M","file":"static/js/main.028c655c.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nconst actions = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n\r\nexport default actions;\r\n","import axios from \"axios\";\r\nimport authActions from \"./auth-actions\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (name, email, password) => async (dispatch) => {\r\n  const credentials = { name, email, password };\r\n  dispatch(authActions.registerRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = (email, password) => async (dispatch) => {\r\n  const credentials = { email, password };\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  getCurrentUser,\r\n};\r\nexport default operations;\r\n","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\r\n\r\nconst getUserName = (state) => state.auth.user.name;\r\n\r\nconst getToken = (state) => state.auth.token;\r\n\r\nconst selectors = {\r\n  getIsAuthenticated,\r\n  getUserName,\r\n  getToken,\r\n};\r\nexport default selectors;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./auth-actions\";\r\n\r\nconst initionalState = { name: null, email: null };\r\n\r\nconst user = createReducer(initionalState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initionalState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Auth_link__2cj8C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"UserMenu_user__2sKjY\",\"icon\":\"UserMenu_icon__1oQlr\",\"text\":\"UserMenu_text__3jVxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"AppBar_AppBar__QdgHm\",\"link\":\"AppBar_link__3Dt2z\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"contacts/filter\");\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./Auth.module.css\";\r\nimport {Button} from \"react-bootstrap\"\r\n\r\nconst Auth = () => (\r\n  <div className={s.App}>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exat\r\n      className={s.link}>\r\n      <Button variant=\"primary\">Register</Button>  \r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exat\r\n      className={s.link}>\r\n      <Button variant=\"primary\">LogIn</Button>\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default Auth;\r\n","export default __webpack_public_path__ + \"static/media/icon-login.a7f69bf7.png\";","import React, { useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { authSelectors, authOperations } from \"../../redux/auth\";\r\nimport defaultAvatar from \"../../icon/icon-login.png\";\r\nimport s from \"./UserMenu.module.css\";\r\nimport {Button} from \"react-bootstrap\"\r\n\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n  const onLogout = useCallback(() => dispatch(authOperations.logOut()), [\r\n    dispatch,\r\n  ]);\r\n\r\n  return (\r\n    <div className={s.user}>\r\n      <img className={s.icon} src={defaultAvatar} alt=\"\" width=\"24\" />\r\n      <span className={s.text}> Welcome, {name} </span>\r\n      <Button variant=\"outline-secondary\" type=\"button\" onClick={onLogout}> Logout</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const UserMenu = ({ avatar, name, onLogout }) => (\r\n//   <div className={s.user}>\r\n//     <img className={s.icon} src={avatar} alt=\"\" width=\"24\" />\r\n//     <span> Welcome, {name} </span>\r\n//     <button className={s.btn} type=\"button\" onClick={onLogout}>\r\n//       Logout\r\n//     </button>\r\n//   </div>\r\n// );\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   name: authSelectors.getUserName(state),\r\n//   avatar: defaultAvatar,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogout: authOperations.logOut,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Auth from \"../Auth/Auth\";\r\nimport UserMenu from \"../UserMenu/UserMenu\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\nimport s from \"./AppBar.module.css\";\r\nimport {Button} from 'react-bootstrap'\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <div className={s.AppBar}> \r\n      {isLoggedIn && (\r\n        <NavLink className={s.link}\r\n          to=\"/contacts\"\r\n          exat>\r\n          <Button variant=\"outline-secondary\"> Contacts</Button>\r\n        </NavLink>\r\n      )}\r\n      {isLoggedIn ? <UserMenu /> : <Auth />}\r\n    </div>\r\n  );\r\n}\r\n\r\n// const AppBar = ({ isLoggedIn }) => (\r\n//   <div className={s.AppBar}>\r\n//     {isLoggedIn && (\r\n//       <NavLink\r\n//         className={s.link}\r\n//         to=\"/contacts\"\r\n//         exat\r\n//         activeClassName={s.activeStyle}\r\n//       >\r\n//         Contacts\r\n//       </NavLink>\r\n//     )}\r\n//     {isLoggedIn ? <UserMenu /> : <Auth />}\r\n//   </div>\r\n// );\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   isLoggedIn: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(AppBar);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\n\r\nexport default function PrivateRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getToken);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\n\r\nexport default function PublicRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Suspense, lazy, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport AppBar from \"./copmonents/AppBar/AppBar\";\nimport { authOperations } from \"./redux/auth\";\nimport PrivateRoute from \"./copmonents/PrivateRoute/PrivateRoute\";\nimport PublicRoute from \"./copmonents/PublicRoute/PublicRoute\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Container} from \"react-bootstrap\"\n\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\nconst ContactsView = lazy(() => import(\"./views/ContactsView\"));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n      <Suspense fallback={<p>Загружаем...</p>}>\n        <Switch>\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n            <RegisterView />\n          </PublicRoute>\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n            <LoginView />\n          </PublicRoute>\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsView />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n}\n\n// class App extends Component {\n//   componentDidMount() {\n//     this.props.onGetCurrentUser();\n//   }\n//   render() {\n//     return (\n//       <>\n//         <AppBar />\n//         <Suspense fallback={<p>Загружаем...</p>}>\n//           <Switch>\n//             <PublicRoute\n//               path=\"/register\"\n//               restricted\n//               redirectTo={\"/contacts\"}\n//               component={RegisterView}\n//             />\n//             <PublicRoute\n//               path=\"/login\"\n//               restricted\n//               redirectTo={\"/contacts\"}\n//               component={LoginView}\n//             />\n//             <PrivateRoute\n//               path=\"/contacts\"\n//               component={ContactsView}\n//               redirectTo=\"/login\"\n//             />\n//           </Switch>\n//         </Suspense>\n//       </>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   onGetCurrentUser: authOperations.getCurrentUser,\n// };\n\n// export default connect(null, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"./contacts-actions\";\r\n\r\nconst initionalState = [\r\n  // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst items = createReducer(initionalState, {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"../redux/contacts/contacts-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { authReducer } from \"../redux/auth\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\n// Асинхроный reducer\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst allStore = { store, persistor };\r\n\r\nexport default allStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}