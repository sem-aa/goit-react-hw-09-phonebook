{"version":3,"sources":["App.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","LoginView","useState","email","setEmail","password","setPassword","dispatch","useDispatch","onLogin","useCallback","authOperations","logIn","className","s","App","onSubmit","evt","preventDefault","autoComplete","field","type","name","onChange","currentTarget"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,qB,8ECGlC,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,0IIAvF,SAASC,IAAa,IAAD,EACRC,mBAAS,IADD,mBAC3BC,EAD2B,KACpBC,EADoB,OAEFF,mBAAS,IAFP,mBAE3BG,EAF2B,KAEjBC,EAFiB,KAG5BC,EAAWC,cACXC,EAAUC,uBACd,SAACP,EAAOE,GAAR,OAAqBE,EAASI,IAAeC,MAAMT,EAAOE,MAC1D,CAACE,IAgBH,OACE,sBAAKM,UAAWC,IAAEC,IAAlB,UACE,4CAEA,uBAAMC,SAVW,SAACC,GACpBA,EAAIC,iBACJT,EAAQN,EAAOE,GACfD,EAAS,IACTE,EAAY,KAMoBa,aAAa,MAA3C,UACE,qBAAKN,UAAWC,IAAEM,MAAlB,SACE,0CAEE,uBACEC,KAAK,QACLC,KAAK,QACL1B,MAAOO,EACPoB,SAzBc,SAACN,GACzBb,EAASa,EAAIO,cAAc5B,eA4BvB,qBAAKiB,UAAWC,IAAEM,MAAlB,SACE,6CAEE,uBACEC,KAAK,WACLC,KAAK,WACL1B,MAAOS,EACPkB,SAjCiB,SAACN,GAC5BX,EAAYW,EAAIO,cAAc5B,eAoC1B,wBAAQyB,KAAK,SAAb","file":"static/js/4.689bd9fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__U8-hn\",\"field\":\"App_field__maW5h\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authOperations } from \"../redux/auth\";\r\nimport s from \"../App.module.css\";\r\n\r\nexport default function LoginView() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const onLogin = useCallback(\r\n    (email, password) => dispatch(authOperations.logIn(email, password)),\r\n    [dispatch]\r\n  );\r\n\r\n  const handleEmailChange = (evt) => {\r\n    setEmail(evt.currentTarget.value);\r\n  };\r\n  const handlePasswordChange = (evt) => {\r\n    setPassword(evt.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    onLogin(email, password);\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <div className={s.App}>\r\n      <h1>Login page</h1>\r\n\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <div className={s.field}>\r\n          <label>\r\n            email\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={s.field}>\r\n          <label>\r\n            password\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n            />\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\">Войти</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// class LoginView extends React.Component {\r\n//   state = {\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   };\r\n//   handleChange = ({ target: { name, value } }) => {\r\n//     this.setState({ [name]: value });\r\n//   };\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     this.props.onLogin(this.state);\r\n//     this.setState({ name: \"\", email: \"\", password: \"\" });\r\n//   };\r\n//   render() {\r\n//     const { email, password } = this.state;\r\n//     const { handleChange, handleSubmit } = this;\r\n//     return (\r\n//       <div className={s.App}>\r\n//         <h1>Login page</h1>\r\n\r\n//         <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n//           <div className={s.field}>\r\n//             <label>\r\n//               email\r\n//               <input\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 value={email}\r\n//                 onChange={handleChange}\r\n//               />\r\n//             </label>\r\n//           </div>\r\n//           <div className={s.field}>\r\n//             <label>\r\n//               password\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"password\"\r\n//                 value={password}\r\n//                 onChange={handleChange}\r\n//               />\r\n//             </label>\r\n//           </div>\r\n//           <button type=\"submit\">Войти</button>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// const mapDispatchToProps = {\r\n//   onLogin: authOperations.logIn,\r\n// };\r\n// export default connect(null, mapDispatchToProps)(LoginView);\r\n"],"sourceRoot":""}