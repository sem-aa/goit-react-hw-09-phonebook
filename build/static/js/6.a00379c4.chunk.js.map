{"version":3,"sources":["views/RegisterView.js","App.module.css"],"names":["RegisterView","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","onRegister","useCallback","authOperations","register","className","s","App","onSubmit","e","preventDefault","autoComplete","Group","controlId","Control","type","value","onChange","event","currentTarget","placeholder","variant","module","exports"],"mappings":"2QAMe,SAASA,IAAgB,IAAD,EACbC,mBAAS,IADI,mBAC9BC,EAD8B,KACxBC,EADwB,OAKXF,mBAAS,IALE,mBAK9BG,EAL8B,KAKvBC,EALuB,OASLJ,mBAAS,IATJ,mBAS9BK,EAT8B,KASpBC,EAToB,KAc/BC,EAAWC,cACXC,EAAaC,uBACjB,SAACT,EAAME,EAAOE,GAAd,OACEE,EAASI,IAAeC,SAASX,EAAME,EAAOE,MAChD,CAACE,IAWH,OACE,qBAAKM,UAAWC,IAAEC,IAAlB,SACA,eAAC,IAAD,CAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACFT,EAAWR,EAAME,EAAOE,GACxBH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAKkBa,aAAa,MAA3C,UACA,cAAC,IAAKC,MAAN,CAAYC,UAAU,gBAAtB,SACI,cAAC,IAAKC,QAAN,CAAcC,KAAK,OAAOtB,KAAK,OAAOuB,MAAOvB,EAAMwB,SA/BtC,SAACC,GAClBxB,EAAQwB,EAAMC,cAAcH,QA8BiDI,YAAY,iBAErF,cAAC,IAAKR,MAAN,CAAYC,UAAU,iBAAtB,SACJ,cAAC,IAAKC,QAAN,CAAcC,KAAK,QACTtB,KAAK,QACLuB,MAAOrB,EACTsB,SAjCU,SAACC,GACnBtB,EAASsB,EAAMC,cAAcH,QAiCrBI,YAAY,kBAEtB,cAAC,IAAKR,MAAN,CAAYC,UAAU,oBAAtB,SAEQ,cAAC,IAAKC,QAAN,CACEC,KAAK,WACHtB,KAAK,WACLuB,MAAOnB,EACToB,SAtCa,SAACC,GACtBpB,EAAYoB,EAAMC,cAAcH,QAsCxBI,YAAY,eAEtB,cAAC,IAAD,CAAQC,QAAQ,UAAUN,KAAK,SAA/B,2B,mBCxDFO,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,mBAAmB,KAAO","file":"static/js/6.a00379c4.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authOperations } from \"../redux/auth\";\r\nimport s from \"../App.module.css\";\r\nimport {Form, Button} from 'react-bootstrap'\r\n\r\nexport default function RegisterView() {\r\n  const [name, setName] = useState(\"\");\r\n  const changeName = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const [email, setEmail] = useState(\"\");\r\n  const changeEmail = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n  const [password, setPassword] = useState(\"\");\r\n  const changePassword = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const onRegister = useCallback(\r\n    (name, email, password) =>\r\n      dispatch(authOperations.register(name, email, password)),\r\n    [dispatch]\r\n  );\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onRegister(name, email, password);\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={s.App}>\r\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n    <Form.Group controlId=\"formBasicName\">\r\n        <Form.Control type=\"text\" name=\"name\" value={name} onChange={changeName} placeholder=\"Enter name\" />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Control type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n            onChange={changeEmail}\r\n            placeholder=\"Enter email\" />\r\n    </Form.Group>\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    \r\n          <Form.Control\r\n            type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n            onChange={changePassword}\r\n            placeholder=\"Password\" />\r\n  </Form.Group>\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Submit\r\n  </Button>\r\n</Form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// class RegisterView extends React.Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   };\r\n\r\n//   handleChange = ({ target: { name, value } }) => {\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     this.props.onRegister(this.state);\r\n//     this.setState({ name: \"\", email: \"\", password: \"\" });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, email, password } = this.state;\r\n//     const { handleChange, handleSubmit } = this;\r\n//     return (\r\n//       <div className={s.App}>\r\n//         <h1>Registration page</h1>\r\n\r\n//         <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n//           <div className={s.field}>\r\n//             <label>\r\n//               name\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 value={name}\r\n//                 onChange={handleChange}\r\n//               />\r\n//             </label>\r\n//           </div>\r\n//           <div className={s.field}>\r\n//             <label>\r\n//               email\r\n//               <input\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 value={email}\r\n//                 onChange={handleChange}\r\n//               />\r\n//             </label>\r\n//           </div>\r\n//           <div className={s.field}>\r\n//             <label>\r\n//               password\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"password\"\r\n//                 value={password}\r\n//                 onChange={handleChange}\r\n//               />\r\n//             </label>\r\n//           </div>\r\n//           <button type=\"submit\">Зарегистрироваться</button>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   onRegister: authOperations.register,\r\n// };\r\n\r\n// export default connect(null, mapDispatchToProps)(RegisterView);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__U8-hn\",\"views\":\"App_views__1Ib2_\",\"form\":\"App_form__1n6kA\"};"],"sourceRoot":""}